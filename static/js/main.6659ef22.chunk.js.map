{"version":3,"sources":["components/dropdown.js","index.js"],"names":["Dropdown","props","onTextChanged","e","value","target","suggestions","length","match","regex","RegExp","state","listItems","sort","filter","v","test","setState","text","colorSelected","searchQuery","colorRef","current","style","display","handleEnter","keyCode","React","createRef","this","colorsList","backgroundColor","boldedString","item","parts","split","tabIndex","onClick","suggestionSelected","className","map","ref","placeholder","onChange","type","renderSuggestions","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAqIeA,G,wDAzHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAmBRC,cAAgB,SAACC,GACf,IAAMC,EAAQD,EAAEE,OAAOD,MACnBE,EAAc,GAClB,GAAIF,EAAMG,OAAS,IACH,OAAVH,GAA0C,OAAxBA,EAAMI,MAAM,SAAkB,CAClD,IAAMC,EAAQ,IAAIC,OAAJ,UAAcN,GAAS,KACrCE,EAAc,EAAKK,MAAMC,UAAUC,OAAOC,QAAO,SAACC,GAAD,OAAON,EAAMO,KAAKD,MAGvE,EAAKE,UAAS,iBAAO,CACnBX,cACAY,KAAMd,EACNe,eAAe,EACfC,YAAahB,MAEV,EAAKO,MAAMQ,gBACd,EAAKE,SAASC,QAAQC,MAAMC,QAAU,SApCvB,EAwCnBC,YAAc,SAACtB,GACb,IAAMC,EAAQD,EAAEE,OAAOD,MACL,KAAdD,EAAEuB,SACJ,EAAKT,UAAS,iBAAO,CACnBC,KAAMd,EACNE,YAAa,GACba,eAAe,OA3CnB,EAAKR,MAAQ,CACXC,UAAW,GACXN,YAAa,GACbY,KAAM,GACNC,eAAe,EACfC,YAAa,IAGf,EAAKC,SAAWM,IAAMC,YAXL,E,gEAejBC,KAAKZ,SAAS,CACZL,UAAWiB,KAAK5B,MAAM6B,e,yCAmCP1B,GACjByB,KAAKZ,UAAS,iBAAO,CACnBC,KAAMd,EACNE,YAAa,GACba,eAAe,MAGjBU,KAAKR,SAASC,QAAQC,MAAMC,QAAU,eACtCK,KAAKR,SAASC,QAAQC,MAAMQ,gBAAkB3B,I,0CAG3B,IAAD,SACmByB,KAAKlB,MAAlCL,EADU,EACVA,YAAac,EADH,EACGA,YA0BrB,OAzBAS,KAAKG,aAAe,SAACC,GACnB,IAAM7B,EAAQgB,EACRX,EAAQ,IAAIC,OAAJ,UAAcN,GAAS,KAC/BI,EAAQyB,EAAKzB,MAAMC,GACzB,GAAa,MAATD,IAA4B,OAAVJ,GAA0C,OAAxBA,EAAMI,MAAM,SAAmB,CACrE,IAAM0B,EAAQD,EAAKE,MAAM3B,EAAM,GAAI,GACnC,OACE,wBACE4B,SAAS,IACTC,QAAS,kBAAM,EAAKC,mBAAmBL,KACtCC,EAAM,GACP,gCAAS1B,EAAM,IACd0B,EAAM,IAIb,OACE,wBACEE,SAAS,IACTC,QAAS,kBAAM,EAAKC,mBAAmBL,KACtCA,IAKHJ,KAAKlB,MAAMQ,eAAwC,IAAvBb,EAAYC,QAEV,IAAvBD,EAAYC,OADd,KAKL,wBAAIgC,UAAU,oBACXjC,EAAYkC,KAAI,SAACP,GAAD,OAAU,EAAKD,aAAaC,S,+BAM3C,IACAf,EAASW,KAAKlB,MAAdO,KACR,OACE,yBAAKqB,UAAU,YACb,wDACA,yBAAKA,UAAU,uBAAuBE,IAAKZ,KAAKR,WAChD,2BACEe,SAAS,IACTM,YAAY,4BACZtC,MAAOc,EACPyB,SAAUd,KAAK3B,cACf0C,KAAK,SAENf,KAAKgB,yB,GA3HSC,cCuJvBC,IAASC,OAEL,kBAAC,EAAD,CAAUlB,WAzJK,CACjB,YACA,eACA,OACA,aACA,QACA,QACA,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,WACA,YACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,OACA,QACA,cACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,YACA,aACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,iBAMAmB,SAASC,eAAe,U","file":"static/js/main.6659ef22.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/dropdown.css\";\n\nclass Dropdown extends Component {\n  static propTypes = {\n    /**\n     * The items to display in the dropdown menu\n     */\n    colorsList: PropTypes.array.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listItems: [],\n      suggestions: [],\n      text: \"\",\n      colorSelected: false,\n      searchQuery: \"\",\n    };\n\n    this.colorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setState({\n      listItems: this.props.colorsList,\n    });\n  }\n\n  onTextChanged = (e) => {\n    const value = e.target.value;\n    let suggestions = [];\n    if (value.length > 0) {\n      if (value !== null || value.match(/^ *$/) === null) {\n        const regex = new RegExp(`${value}`, \"i\");\n        suggestions = this.state.listItems.sort().filter((v) => regex.test(v));\n      }\n    }\n    this.setState(() => ({\n      suggestions,\n      text: value,\n      colorSelected: false,\n      searchQuery: value,\n    }));\n    if (!this.state.colorSelected) {\n      this.colorRef.current.style.display = \"none\";\n    }\n  };\n\n  handleEnter = (e) => {\n    const value = e.target.value;\n    if (e.keyCode === 13) {\n      this.setState(() => ({\n        text: value,\n        suggestions: [],\n        colorSelected: true,\n      }));\n    }\n  };\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: [],\n      colorSelected: true,\n    }));\n\n    this.colorRef.current.style.display = \"inline-block\";\n    this.colorRef.current.style.backgroundColor = value;\n  }\n\n  renderSuggestions() {\n    const { suggestions, searchQuery } = this.state;\n    this.boldedString = (item) => {\n      const value = searchQuery;\n      const regex = new RegExp(`${value}`, \"i\");\n      const match = item.match(regex);\n      if (match != null && (value !== null || value.match(/^ *$/) === null)) {\n        const parts = item.split(match[0], 2);\n        return (\n          <li\n            tabIndex=\"0\"\n            onClick={() => this.suggestionSelected(item)}>\n            {parts[0]}\n            <strong>{match[0]}</strong>\n            {parts[1]}\n          </li>\n        );\n      }\n      return (\n        <li\n          tabIndex=\"0\"\n          onClick={() => this.suggestionSelected(item)}>\n          {item}\n        </li>\n      );\n    };\n\n    if (this.state.colorSelected && suggestions.length === 0) {\n      return null;\n    } else if (suggestions.length === 0) {\n      return null;\n    } else {\n      return (\n        <ul className=\"Dropdown-content\">\n          {suggestions.map((item) => this.boldedString(item))}\n        </ul>\n      );\n    }\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <div className=\"Dropdown\">\n        <h2>Dropdown List for Colors</h2>\n        <div className=\"show-color-in-circle\" ref={this.colorRef} />\n        <input\n          tabIndex=\"0\"\n          placeholder=\"Search your color here...\"\n          value={text}\n          onChange={this.onTextChanged}\n          type=\"text\"\n        />\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dropdown from \"./components/dropdown\";\n\nconst colorsList = [\n  \"AliceBlue\",\n  \"AntiqueWhite\",\n  \"Aqua\",\n  \"Aquamarine\",\n  \"Azure\",\n  \"Beige\",\n  \"Bisque\",\n  \"Black\",\n  \"BlanchedAlmond\",\n  \"Blue\",\n  \"BlueViolet\",\n  \"Brown\",\n  \"BurlyWood\",\n  \"CadetBlue\",\n  \"Chartreuse\",\n  \"Chocolate\",\n  \"Coral\",\n  \"CornflowerBlue\",\n  \"Cornsilk\",\n  \"Crimson\",\n  \"Cyan\",\n  \"DarkBlue\",\n  \"DarkCyan\",\n  \"DarkGoldenRod\",\n  \"DarkGray\",\n  \"DarkGrey\",\n  \"DarkGreen\",\n  \"DarkKhaki\",\n  \"DarkMagenta\",\n  \"DarkOliveGreen\",\n  \"DarkOrange\",\n  \"DarkOrchid\",\n  \"DarkRed\",\n  \"DarkSalmon\",\n  \"DarkSeaGreen\",\n  \"DarkSlateBlue\",\n  \"DarkSlateGray\",\n  \"DarkSlateGrey\",\n  \"DarkTurquoise\",\n  \"DarkViolet\",\n  \"DeepPink\",\n  \"DeepSkyBlue\",\n  \"DimGray\",\n  \"DimGrey\",\n  \"DodgerBlue\",\n  \"FireBrick\",\n  \"FloralWhite\",\n  \"ForestGreen\",\n  \"Fuchsia\",\n  \"Gainsboro\",\n  \"GhostWhite\",\n  \"Gold\",\n  \"GoldenRod\",\n  \"Gray\",\n  \"Grey\",\n  \"Green\",\n  \"GreenYellow\",\n  \"HoneyDew\",\n  \"HotPink\",\n  \"IndianRed\",\n  \"Indigo\",\n  \"Ivory\",\n  \"Khaki\",\n  \"Lavender\",\n  \"LavenderBlush\",\n  \"LawnGreen\",\n  \"LemonChiffon\",\n  \"LightBlue\",\n  \"LightCoral\",\n  \"LightCyan\",\n  \"LightGoldenRodYellow\",\n  \"LightGray\",\n  \"LightGrey\",\n  \"LightGreen\",\n  \"LightPink\",\n  \"LightSalmon\",\n  \"LightSeaGreen\",\n  \"LightSkyBlue\",\n  \"LightSlateGray\",\n  \"LightSlateGrey\",\n  \"LightSteelBlue\",\n  \"LightYellow\",\n  \"Lime\",\n  \"LimeGreen\",\n  \"Linen\",\n  \"Magenta\",\n  \"Maroon\",\n  \"MediumAquaMarine\",\n  \"MediumBlue\",\n  \"MediumOrchid\",\n  \"MediumPurple\",\n  \"MediumSeaGreen\",\n  \"MediumSlateBlue\",\n  \"MediumSpringGreen\",\n  \"MediumTurquoise\",\n  \"MediumVioletRed\",\n  \"MidnightBlue\",\n  \"MintCream\",\n  \"MistyRose\",\n  \"Moccasin\",\n  \"NavajoWhite\",\n  \"Navy\",\n  \"OldLace\",\n  \"Olive\",\n  \"OliveDrab\",\n  \"Orange\",\n  \"OrangeRed\",\n  \"Orchid\",\n  \"PaleGoldenRod\",\n  \"PaleGreen\",\n  \"PaleTurquoise\",\n  \"PaleVioletRed\",\n  \"PapayaWhip\",\n  \"PeachPuff\",\n  \"Peru\",\n  \"Pink\",\n  \"Plum\",\n  \"PowderBlue\",\n  \"Purple\",\n  \"RebeccaPurple\",\n  \"Red\",\n  \"RosyBrown\",\n  \"RoyalBlue\",\n  \"SaddleBrown\",\n  \"Salmon\",\n  \"SandyBrown\",\n  \"SeaGreen\",\n  \"SeaShell\",\n  \"Sienna\",\n  \"Silver\",\n  \"SkyBlue\",\n  \"SlateBlue\",\n  \"SlateGray\",\n  \"SlateGrey\",\n  \"Snow\",\n  \"SpringGreen\",\n  \"SteelBlue\",\n  \"Tan\",\n  \"Teal\",\n  \"Thistle\",\n  \"Tomato\",\n  \"Turquoise\",\n  \"Violet\",\n  \"Wheat\",\n  \"White\",\n  \"WhiteSmoke\",\n  \"Yellow\",\n  \"YellowGreen\",\n];\n\nReactDOM.render(\n    /* <YourComponentGoesHere /> */\n    <Dropdown colorsList ={colorsList}/>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}